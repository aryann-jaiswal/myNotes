{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  register: async data => {\n    const response = await api.post('/auth/register', data);\n    return response.data;\n  },\n  login: async data => {\n    const response = await api.post('/auth/login', data);\n    return response.data;\n  },\n  getProfile: async () => {\n    const response = await api.get('/auth/profile');\n    return response.data;\n  }\n};\n\n// Notes API\nexport const notesAPI = {\n  getNotes: async params => {\n    const response = await api.get('/notes', {\n      params\n    });\n    return response.data;\n  },\n  getNote: async id => {\n    const response = await api.get(`/notes/${id}`);\n    return response.data;\n  },\n  createNote: async data => {\n    const response = await api.post('/notes', data);\n    return response.data;\n  },\n  updateNote: async (id, data) => {\n    const response = await api.put(`/notes/${id}`, data);\n    return response.data;\n  },\n  deleteNote: async id => {\n    const response = await api.delete(`/notes/${id}`);\n    return response.data;\n  },\n  searchNotes: async (query, page = 1, limit = 10) => {\n    const response = await api.get('/notes/search', {\n      params: {\n        query,\n        page,\n        limit\n      }\n    });\n    return response.data;\n  },\n  getFolders: async () => {\n    const response = await api.get('/notes/folders');\n    return response.data;\n  },\n  getTags: async () => {\n    const response = await api.get('/notes/tags');\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","register","data","post","login","getProfile","get","notesAPI","getNotes","params","getNote","id","createNote","updateNote","put","deleteNote","delete","searchNotes","query","page","limit","getFolders","getTags"],"sources":["/Users/aryanjaiswal/myNotes/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { \n  AuthResponse, \n  NotesResponse, \n  Note, \n  CreateNoteData, \n  UpdateNoteData,\n  FoldersResponse,\n  TagsResponse,\n  SearchParams\n} from '../types';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authAPI = {\n  register: async (data: { name: string; email: string; password: string }): Promise<AuthResponse> => {\n    const response = await api.post('/auth/register', data);\n    return response.data;\n  },\n\n  login: async (data: { email: string; password: string }): Promise<AuthResponse> => {\n    const response = await api.post('/auth/login', data);\n    return response.data;\n  },\n\n  getProfile: async () => {\n    const response = await api.get('/auth/profile');\n    return response.data;\n  },\n};\n\n// Notes API\nexport const notesAPI = {\n  getNotes: async (params?: SearchParams): Promise<NotesResponse> => {\n    const response = await api.get('/notes', { params });\n    return response.data;\n  },\n\n  getNote: async (id: string): Promise<{ note: Note }> => {\n    const response = await api.get(`/notes/${id}`);\n    return response.data;\n  },\n\n  createNote: async (data: CreateNoteData): Promise<{ message: string; note: Note }> => {\n    const response = await api.post('/notes', data);\n    return response.data;\n  },\n\n  updateNote: async (id: string, data: UpdateNoteData): Promise<{ message: string; note: Note }> => {\n    const response = await api.put(`/notes/${id}`, data);\n    return response.data;\n  },\n\n  deleteNote: async (id: string): Promise<{ message: string }> => {\n    const response = await api.delete(`/notes/${id}`);\n    return response.data;\n  },\n\n  searchNotes: async (query: string, page = 1, limit = 10): Promise<NotesResponse> => {\n    const response = await api.get('/notes/search', { \n      params: { query, page, limit } \n    });\n    return response.data;\n  },\n\n  getFolders: async (): Promise<FoldersResponse> => {\n    const response = await api.get('/notes/folders');\n    return response.data;\n  },\n\n  getTags: async (): Promise<TagsResponse> => {\n    const response = await api.get('/notes/tags');\n    return response.data;\n  },\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}