{"ast":null,"code":"var _jsxFileName = \"/Users/aryanjaiswal/myNotes/frontend/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const storedToken = localStorage.getItem('token');\n      const storedUser = localStorage.getItem('user');\n      if (storedToken && storedUser) {\n        try {\n          setToken(storedToken);\n          setUser(JSON.parse(storedUser));\n\n          // Verify token is still valid\n          await authAPI.getProfile();\n        } catch (error) {\n          // Token is invalid, clear storage\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n          setToken(null);\n          setUser(null);\n        }\n      }\n      setLoading(false);\n    };\n    initializeAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await authAPI.login({\n        email,\n        password\n      });\n      const {\n        token: newToken,\n        user: newUser\n      } = response;\n      localStorage.setItem('token', newToken);\n      localStorage.setItem('user', JSON.stringify(newUser));\n      setToken(newToken);\n      setUser(newUser);\n    } catch (error) {\n      throw error;\n    }\n  };\n  const register = async (name, email, password) => {\n    try {\n      const response = await authAPI.register({\n        name,\n        email,\n        password\n      });\n      const {\n        token: newToken,\n        user: newUser\n      } = response;\n      localStorage.setItem('token', newToken);\n      localStorage.setItem('user', JSON.stringify(newUser));\n      setToken(newToken);\n      setUser(newUser);\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setToken(null);\n    setUser(null);\n  };\n  const value = {\n    user,\n    token,\n    login,\n    register,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"uAkFQMmIUxfxJcQTEb8tCM/KFt4=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","token","setToken","loading","setLoading","initializeAuth","storedToken","localStorage","getItem","storedUser","JSON","parse","getProfile","error","removeItem","login","email","password","response","newToken","newUser","setItem","stringify","register","name","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aryanjaiswal/myNotes/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { User } from '../types';\nimport { authAPI } from '../services/api';\n\ninterface AuthContextType {\n  user: User | null;\n  token: string | null;\n  login: (email: string, password: string) => Promise<void>;\n  register: (name: string, email: string, password: string) => Promise<void>;\n  logout: () => void;\n  loading: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [token, setToken] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const storedToken = localStorage.getItem('token');\n      const storedUser = localStorage.getItem('user');\n\n      if (storedToken && storedUser) {\n        try {\n          setToken(storedToken);\n          setUser(JSON.parse(storedUser));\n          \n          // Verify token is still valid\n          await authAPI.getProfile();\n        } catch (error) {\n          // Token is invalid, clear storage\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n          setToken(null);\n          setUser(null);\n        }\n      }\n      setLoading(false);\n    };\n\n    initializeAuth();\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    try {\n      const response = await authAPI.login({ email, password });\n      const { token: newToken, user: newUser } = response;\n      \n      localStorage.setItem('token', newToken);\n      localStorage.setItem('user', JSON.stringify(newUser));\n      \n      setToken(newToken);\n      setUser(newUser);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const register = async (name: string, email: string, password: string) => {\n    try {\n      const response = await authAPI.register({ name, email, password });\n      const { token: newToken, user: newUser } = response;\n      \n      localStorage.setItem('token', newToken);\n      localStorage.setItem('user', JSON.stringify(newUser));\n      \n      setToken(newToken);\n      setUser(newUser);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setToken(null);\n    setUser(null);\n  };\n\n  const value: AuthContextType = {\n    user,\n    token,\n    login,\n    register,\n    logout,\n    loading,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}